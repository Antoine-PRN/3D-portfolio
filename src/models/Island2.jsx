/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 src/assets/3d/Island2.glb 
Author: valentin.perez (https://sketchfab.com/valentin.perez)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/floating-island-35d3023b1c3f47c9ba610141c39fd134
Title: Floating Island
*/

import { useRef, useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { a } from "@react-spring/three";

import IslandScene from '../assets/3d/Island3.glb'

export default function Island2({ isRotating, setIsRotating, setCurrentStage, ...props }) {
  const IslandRef = useRef();

  const { nodes, materials } = useGLTF(IslandScene);
  const { gl, viewport } = useThree();

  // // Add an AxesHelper after the model has been loaded
  // const axesHelper = useRef(new AxesHelper(100));

  // // Check if IslandRef has been initialized before adding the axesHelper
  // if (IslandRef.current) {
  //   IslandRef.current.add(axesHelper.current);
  // }

  const lastX = useRef(0);
  const rotationSpeed = useRef(0);
  const dampingFactor = 0.95;

  const handlePointerDown = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(true);

    const clientX = e.touches ? e.touches[0].clientX : e.clientX;

    lastX.current = clientX;
  }

  const handlePointerUp = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(false);
  }

  const handlePointerMove = (e) => {
    e.stopPropagation();
    e.preventDefault();

    if (isRotating) {
      const clientX = e.touches ? e.touches[0].clientX : e.clientX;

      const delta = (clientX - lastX.current) / viewport.width;

      IslandRef.current.rotation.y += delta * 0.01 * Math.PI;

      lastX.current = clientX;
      rotationSpeed.current = delta * 0.01 * Math.PI;
    }
  }

  const handleKeyDown = (e) => {
    if (e.key === "ArrowLeft") {
      if (!isRotating) setIsRotating(true);
      IslandRef.current.rotation.y += 0.01 * Math.PI;
      rotationSpeed.current = 0.0125;
    } else if (e.key === "ArrowRight") {
      if (!isRotating) setIsRotating(true);
      IslandRef.current.rotation.y -= 0.01 * Math.PI;
      rotationSpeed.current = -0.0125;
    }
  }

  const handleKeyUp = (e) => {
    if (e.key === "ArrowLeft" || e.key === "ArrowRight") {
      setIsRotating(false);
    }
  }

  useFrame(() => {
    if (!isRotating) {
      rotationSpeed.current *= dampingFactor;

      if (Math.abs(rotationSpeed.current) < 0.001) {
        rotationSpeed.current = 0;
      }

      IslandRef.current.rotation.y += rotationSpeed.current;
    } else {
      const rotation = IslandRef.current.rotation.y;

      const normalizedRotation = ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);

      // Set the current stage based on the island's orientation
      switch (true) {
        case normalizedRotation >= 1 && normalizedRotation <= 1.40:
          setCurrentStage(4);
          break;
        case normalizedRotation >= 2.90 && normalizedRotation <= 3.40:
          setCurrentStage(3);
          break;
        case normalizedRotation >= 4.25 && normalizedRotation <= 4.75:
          setCurrentStage(2);
          break;
        case normalizedRotation >= 5.90 && normalizedRotation <= 6.40:
          setCurrentStage(1);
          break;
        case normalizedRotation >= 0 && normalizedRotation <= 0.1:
          setCurrentStage(1);
          break;
        default:
          setCurrentStage(null);
      }
    }
  });

  useEffect(() => {
    const canvas = gl.domElement;
    canvas.addEventListener('pointerdown', handlePointerDown);
    canvas.addEventListener('pointerup', handlePointerUp);
    canvas.addEventListener('pointermove', handlePointerMove);
    document.addEventListener('keydown', handleKeyDown);
    document.addEventListener('keyup', handleKeyUp);

    return () => {
      canvas.removeEventListener('pointerdown', handlePointerDown);
      canvas.removeEventListener('pointerup', handlePointerUp);
      canvas.removeEventListener('pointermove', handlePointerMove);
      document.removeEventListener('keydown', handleKeyDown);
      document.removeEventListener('keyup', handleKeyUp);
    }
  }, [gl, handlePointerDown, handlePointerUp, handlePointerMove])

  return (
    <a.group ref={IslandRef} {...props} dispose={null}>
      <a.group name="Sketchfab_Scene">
        <a.group name="Sketchfab_model" position={[-0.408, 0, 0.673]} rotation={[-Math.PI / 2, 0, 0]} scale={5}>
          <a.group name="root">
            <a.group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <a.group name="Clouds_26" position={[-1.936, 8.104, -1.123]} scale={0.781}>
                <mesh name="Object_73" geometry={nodes.Object_73.geometry} material={materials['Material.007']} />
              </a.group>
              <a.group name="Plane001_0" position={[-0.461, 0, 0]} scale={8.295}>
                <mesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials.Water_Material} />
              </a.group>
              <a.group name="Plane003_1" position={[-2.881, 1.609, -6.945]} rotation={[0.083, -0.03, 0.138]} scale={0.179}>
                <mesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials['Material.005']} />
                <mesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials['Material.006']} />
              </a.group>
              <a.group name="Plane004_2" position={[-3.436, 1.402, -6.611]} rotation={[0.037, -0.007, 0.077]} scale={0.165}>
                <mesh name="Object_9" geometry={nodes.Object_9.geometry} material={materials['Material.005']} />
                <mesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials['Material.006']} />
              </a.group>
              <a.group name="Plane005_3" position={[-4.416, 0.958, -6.056]} rotation={[-0.05, 0.046, -0.039]} scale={0.199}>
                <mesh name="Object_12" geometry={nodes.Object_12.geometry} material={materials['Material.005']} />
                <mesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials['Material.006']} />
              </a.group>
              <a.group name="Plane006_4" position={[-2.954, 0.74, -4.519]} rotation={[0.016, 0.032, -0.12]} scale={0.181}>
                <mesh name="Object_15" geometry={nodes.Object_15.geometry} material={materials['Material.005']} />
                <mesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials['Material.006']} />
              </a.group>
              <a.group name="Plane007_5" position={[-7.019, 1.161, 2.91]} rotation={[-0.018, 0.06, 0.048]} scale={0.106}>
                <mesh name="Object_18" geometry={nodes.Object_18.geometry} material={materials['Material.005']} />
                <mesh name="Object_19" geometry={nodes.Object_19.geometry} material={materials['Material.006']} />
              </a.group>
              <a.group name="Plane008_6" position={[6.741, 1.416, -2.277]} rotation={[0.137, 0.09, -0.041]} scale={0.131}>
                <mesh name="Object_21" geometry={nodes.Object_21.geometry} material={materials['Material.005']} />
                <mesh name="Object_22" geometry={nodes.Object_22.geometry} material={materials['Material.006']} />
              </a.group>
              <a.group name="BigTree_8" position={[-1.677, -0.179, -13.035]} rotation={[Math.PI, -1.112, Math.PI]} scale={0.146}>
                <a.group name="BigTreeLeafs_7" position={[11.837, 16.753, 1.752]} scale={6.837}>
                  <mesh name="Object_26" geometry={nodes.Object_26.geometry} material={materials.TreeGreen} />
                </a.group>
                <mesh name="Object_24" geometry={nodes.Object_24.geometry} material={materials.TreeBrownPlus} />
              </a.group>
              <a.group name="Tree001_11" position={[8.017, 1.063, 4.262]} rotation={[-Math.PI, -0.455, -Math.PI]} scale={0.14}>
                <mesh name="Object_28" geometry={nodes.Object_28.geometry} material={materials.TreeBrown} />
                <mesh name="Object_29" geometry={nodes.Object_29.geometry} material={materials.TreeBrownPlus} />
                <mesh name="Object_30" geometry={nodes.Object_30.geometry} material={materials.TreeGreen} />
                <mesh name="Object_31" geometry={nodes.Object_31.geometry} material={materials['Material.004']} />
              </a.group>
              <a.group name="Icosphere001_12" position={[0.382, 1.882, 1.249]} scale={0.309}>
                <mesh name="Object_33" geometry={nodes.Object_33.geometry} material={materials.TreeGreen} />
                <mesh name="Object_34" geometry={nodes.Object_34.geometry} material={materials['Material.004']} />
              </a.group>
              <a.group name="Icosphere002_13" position={[1.568, -0.757, -12.179]} rotation={[0, 0.408, 0]}>
                <mesh name="Object_36" geometry={nodes.Object_36.geometry} material={materials.IsleGround} />
                <mesh name="Object_37" geometry={nodes.Object_37.geometry} material={materials.IsleGreen} />
              </a.group>
              <a.group name="Icosphere003_14" position={[5.84, -6.843, -5.808]} rotation={[-0.57, -0.314, -0.153]}>
                <mesh name="Object_39" geometry={nodes.Object_39.geometry} material={materials.IsleGround} />
                <mesh name="Object_40" geometry={nodes.Object_40.geometry} material={materials.IsleGreen} />
              </a.group>
              <a.group name="Icosphere004_15" position={[-1.107, -8.299, -6.856]} rotation={[0.104, -0.028, 0.393]}>
                <mesh name="Object_42" geometry={nodes.Object_42.geometry} material={materials.IsleGround} />
              </a.group>
              <a.group name="Rock_16" position={[6.244, 2.286, 5.913]} rotation={[0.191, 0.701, 1.385]} scale={[0.661, 1.692, 1.013]}>
                <mesh name="Object_44" geometry={nodes.Object_44.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="Rock001_17" position={[-0.496, 1.238, 6.849]} rotation={[-0.726, -0.185, -1.653]} scale={[0.661, 0.648, 0.778]}>
                <mesh name="Object_46" geometry={nodes.Object_46.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="Rock002_18" position={[8.043, -1.566, 4.396]} rotation={[-1.579, -0.154, -0.134]} scale={[1.826, 2.348, 1.826]}>
                <mesh name="Object_48" geometry={nodes.Object_48.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="Rock003_19" position={[2.338, -5.177, -7.975]} rotation={[-1.089, 0.065, -0.039]} scale={[3.973, 3.192, 3.629]}>
                <mesh name="Object_50" geometry={nodes.Object_50.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="Rock004_20" position={[-5.456, 3.06, -2.726]} rotation={[-1.839, -0.188, -0.319]} scale={[2.478, 1.991, 2.263]}>
                <mesh name="Object_52" geometry={nodes.Object_52.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="Rock005_21" position={[5.769, 1.566, 6.338]} rotation={[0.049, 0.883, 0.089]} scale={[0.658, 1.241, 0.999]}>
                <mesh name="Object_54" geometry={nodes.Object_54.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="Rock006_22" position={[6.565, 1.381, 5.744]} rotation={[0.058, -0.998, 0.176]} scale={[0.661, 1.52, 0.999]}>
                <mesh name="Object_56" geometry={nodes.Object_56.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="Tree002_23" position={[-2.099, 0.748, 6.783]} rotation={[0.268, -0.973, 0.241]} scale={0.099}>
                <mesh name="Object_58" geometry={nodes.Object_58.geometry} material={materials.TreeBrown} />
                <mesh name="Object_59" geometry={nodes.Object_59.geometry} material={materials.TreeBrownPlus} />
                <mesh name="Object_60" geometry={nodes.Object_60.geometry} material={materials.TreeGreen} />
                <mesh name="Object_61" geometry={nodes.Object_61.geometry} material={materials['Material.004']} />
              </a.group>
              <a.group name="Tree003_24" position={[1.888, 0.415, 1.841]} rotation={[2.8, 0.867, -2.794]} scale={0.115}>
                <mesh name="Object_63" geometry={nodes.Object_63.geometry} material={materials.TreeBrown} />
                <mesh name="Object_64" geometry={nodes.Object_64.geometry} material={materials.TreeBrownPlus} />
                <mesh name="Object_65" geometry={nodes.Object_65.geometry} material={materials.TreeGreen} />
                <mesh name="Object_66" geometry={nodes.Object_66.geometry} material={materials['Material.004']} />
              </a.group>
              <a.group name="Tree004_25" position={[8.072, -1.182, -4.815]} rotation={[-2.646, -0.997, -1.917]} scale={0.14}>
                <mesh name="Object_68" geometry={nodes.Object_68.geometry} material={materials.TreeBrown} />
                <mesh name="Object_69" geometry={nodes.Object_69.geometry} material={materials.TreeBrownPlus} />
                <mesh name="Object_70" geometry={nodes.Object_70.geometry} material={materials.TreeGreen} />
                <mesh name="Object_71" geometry={nodes.Object_71.geometry} material={materials['Material.004']} />
              </a.group>
              <a.group name="Icosphere_27" scale={10}>
                <mesh name="Object_75" geometry={nodes.Object_75.geometry} material={materials.IcoSphere_Material} />
              </a.group>
              <a.group name="RockTree_28" position={[2.008, 1.428, -12.602]} rotation={[0.099, 1.152, -0.244]} scale={[0.597, 0.476, 0.5]}>
                <mesh name="Object_77" geometry={nodes.Object_77.geometry} material={materials.Rock} />
              </a.group>
              <a.group name="RockTree001_29" position={[4.718, -5.735, -7.473]} rotation={[-0.009, 1.129, -0.225]} scale={[0.364, 0.291, 0.305]}>
                <mesh name="Object_79" geometry={nodes.Object_79.geometry} material={materials.Rock} />
              </a.group>
            </a.group>
          </a.group>
        </a.group>
      </a.group>
    </a.group>
  )
}